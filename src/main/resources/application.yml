server:
  port: 9001
  shutdown: graceful
  tomcat:
    connection-timeout: 2s
    keep-alive-timeout: 15s
    threads:
      max: 50
      min-spare: 5
spring:
  application:
    name: catalog-service
  lifecycle:
    timeout-per-shutdown-phase: 15s
  config:
    import: "optional:configserver:"
  cloud:
    config:
      uri: http://localhost:8888
      request-connect-timeout: 5000 #Timeout on waiting to connect to the config server (ms)
      request-read-timeout: 5000 #Timeout on waiting to read configuration data from the config server (ms)
      fail-fast: false #Makes a failure to connect to the config server fatal
      retry:
        max-attempts: 6 #Maximum number of attempts
        initial-interval: 1000 #Initial retry interval for backoff (ms)
        max-interval: 2000 #Maximum retry interval for backoff (ms)
        multiplier: 1.1 #Multiplier to compute the next interval
  datasource:
    username: user
    password: password
    url: jdbc:postgresql://localhost:5432/polardb_catalog
    hikari:
      connection-timeout: 2000 #The maximum time (ms) to spend waiting to get a connection from the pool
      maximum-pool-size: 5 #The maximum number of connections HikariCP will keep in the pool
management:
  endpoints:
    web:
      exposure:
        include: refresh #Exposes the /actuator/refresh endpoint through HTTP
#polar:
#  greeting: Welcome to the local book catalog!
