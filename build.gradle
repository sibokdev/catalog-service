plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.polarbookshop'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}
// added to generate metadata from config bean
// to show up descriptions on ide of each propertie
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

ext {
	set('springCloudVersion', "2021.0.3")
	set('testcontainersVersion', "1.17.3") // addind dependencie for testContainers Defines the Testcontainers version to use
}

dependencies {
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.junit.jupiter:junit-jupiter:5.8.1'
	implementation 'org.assertj:assertj-core:3.22.0'
	implementation 'org.springframework.retry:spring-retry'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-webflux'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor' // added to generate metadata from config bean
	testImplementation 'org.testcontainers:postgresql' //Provides container management features for PostgreSQL databases
	implementation 'org.flywaydb:flyway-core'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}" //BOM (bill of materials) for Testcontainers dependency management
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
//defining profile to be used on bootrun
bootRun {
	systemProperty 'spring.profiles.active', 'testdata'
}
